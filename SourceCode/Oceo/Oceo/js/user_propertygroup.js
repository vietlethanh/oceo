/*
 * This file was automatically generated By Code Smith 
 * Modifications will be overwritten when code smith is run
 *
 * PLEASE DO NOT MAKE MODIFICATIONS TO THIS FILE
 * Date Created 5/6/2012
 *
 */



/// <summary>
/// Implementations of sladvertisings represent a Advertising
///
/// </summary>
var propertyGroup = {
    //region PRESERVE ExtraMethods For Article
    //endregion
    //region Contants	
    ACT_ADD: 10,
    ACT_UPDATE: 11,
    ACT_DELETE: 12,
    ACT_CHANGE_PAGE: 13,
    ACT_SHOW_EDIT: 14,
    ACT_GET: 15,
    ACT_ACTIVE: 16,
    Page: "admin_propertygroup.php",
	
	showPopupAdd: function(modalID)
	{
        //alert('Show form');
		propertyGroup.clearForm();
		core.util.getObjectByClass('ckCreateOther').show();
		
		$('#'+modalID).modal({ backdrop: 'static', keyboard: false });
	},
	
	showPopupEdit: function(propertyGroupID, modalID)
	{
		
		core.util.getObjectByID('adddocmode').val(1);
		core.util.getObjectByID('PropertyGroupID').val(propertyGroupID);
		propertyGroupInfo = {
			id : propertyGroupID,
			act: this.ACT_SHOW_EDIT
		}
		core.request.post(this.Page,propertyGroupInfo,
            function(respone, info){
				var strRespond = core.util.parserXML(respone);
				if (parseInt(strRespond[1]['rs']) == 1) {
					core.util.getObjectByClass('ckCreateOther').hide();
					core.util.getObjectByClass('popup-title').html('Edit Property');
					//console.log(strRespond[1]['content']);
					var propertyGroupRespone = $.parseJSON(strRespond[1]['content']);
					propertyGroup.bindingAdForm(propertyGroupRespone);
					$('#'+modalID).modal({ backdrop: 'static', keyboard: false });
					 core.ui.hideInfoBar();	
                }
                else{
                    core.ui.showInfoBar(2, strRespond[1]["inf"]);						
                }
            },
            function()
            {
				core.ui.showInfoBar(2, core.constant.MsgProcessError);					
            }
        );
		
	},
	
	bindingAdForm: function(propertyGroup)
	{
	    //console.log(propertyGroup);
		var controlID = 'txtGroupName';		
		core.util.getObjectByID(controlID).val(propertyGroup.PropertyGroupName);
		
		controlID = 'cmdCat';		
		core.util.getObjectByID(controlID).val(propertyGroup.PropertyGroupID);		
	
		controlID = 'txtOrder';		
		core.util.getObjectByID(controlID).val(propertyGroup.Order);	
	},
	
	getPropertyGroupInfo: function(submitID) {
		isValid =  true;
        core.util.disableControl(submitID, true);
   
		var controlID = 'txtGroupName';		
		var proGroupName = core.util.getObjectValueByID(controlID);
		if(core.util.isNull(proGroupName))
        {
            core.util.validateInputTextBox(controlID,'Property Group is empty');
            isValid =  false;
        }
		controlID = 'cmdCat';		
		var catID = core.util.getObjectValueByID(controlID);			
      
		controlID = 'txtOrder';		
		var order = core.util.getObjectValueByID(controlID);        
        core.util.validateInputTextBox(controlID,'');
        
        if(core.util.isNull(order) == false && $.isNumeric(order) == false)
        {
            core.util.validateInputTextBox(controlID,'Order is not a numberic');
            isValid =  false;
        }
        
        if (isValid == false) {
			core.util.disableControl("btnOK", false);
            return;
        }
		var propertyGroupInfo = 
		{
			 PropertyGroupName: proGroupName,		
			 ArticleTypeID: catID,		
			 Order: order,			 		
			 PropertyGroupID: core.util.getObjectValueByID('PropertyGroupID'),
			 Mode: core.util.getObjectValueByID('adddocmode')
		};
		return propertyGroupInfo;
    },
	
	clearForm: function()
	{
	   	var controlID = 'txtGroupName';		
        core.util.clearValue(controlID);
		
		controlID = 'cmdCat';		
		core.util.clearValue(controlID);			
      
		controlID = 'txtOrder';		
		core.util.clearValue(controlID);
       
		core.util.getObjectByID('adddocmode').val(0);
		core.util.getObjectByID('PropertyGroupID').val('');
	},
	
    addPropertyGroup: function() { 
		var submitID = "btnSave"
        var propertyGroupInfo = this.getPropertyGroupInfo(submitID);
		if(core.util.isNull(propertyGroupInfo))
		{
			return false;
		}
		if(propertyGroupInfo.Mode=='1' || propertyGroupInfo.Mode==1)
		{
			propertyGroupInfo.act = this.ACT_UPDATE;
		}
		else
		{
			propertyGroupInfo.act = this.ACT_ADD;
		}
		
		core.request.post(this.Page,propertyGroupInfo,
            function(respone, info){
				var strRespond = core.util.parserXML(respone);
				if (parseInt(strRespond[1]['rs']) == 1) {
					core.ui.showInfoBar(1, strRespond[1]["inf"]);	
					propertyGroup.clearForm();
					core.util.disableControl(submitID, false);
					if(core.util.isChecked("ckCreateOther") == false)
					   core.util.reload();
                }
                else{
                    core.ui.showInfoBar(2, strRespond[1]["inf"]);	
					core.util.disableControl(submitID, false);
                }
            },
            function()
            {
				core.ui.showInfoBar(2, core.constant.MsgProcessError);	
				core.util.disableControl(submitID, false);
            }
        );
    },
    delete: function(objID,status) { 
		var submitID = "btnSave"
        var infoRequest ={};	
	    infoRequest.act = this.ACT_DELETE;
        infoRequest.PropertyGroupID = objID;
        infoRequest.Status = status;
		
		core.request.post(this.Page,infoRequest,
            function(respone, info){
				var strRespond = core.util.parserXML(respone);
				if (parseInt(strRespond[1]['rs']) == 1) {
					core.ui.showInfoBar(1, strRespond[1]["inf"]);					
					core.util.disableControl(submitID, false);      
                    core.util.reload();            
                }
                else{
                    core.ui.showInfoBar(2, strRespond[1]["inf"]);	
					core.util.disableControl(submitID, false);
                }
            },
            function()
            {
				core.ui.showInfoBar(2, core.constant.MsgProcessError);	
				core.util.disableControl(submitID, false);
            }
        );
    }

}

