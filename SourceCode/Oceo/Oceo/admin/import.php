<?php
/*
 * This file was automatically generated By Code Smith 
 * Modifications will be overwritten when code smith is run
 *
 * PLEASE DO NOT MAKE MODIFICATIONS TO THIS FILE
 * Date Created 5/6/2012
 *
 */

/// <summary>
/// Implementations of slarticles represent a Article
///
/// </summary>
chdir("..");
/* TODO: Add code here */
require('config/globalconfig.php');
require('include/_permission_admin.inc');
include_once('class/model_property.php');
include_once('class/model_propertygroup.php');
include_once('class/Model_articletype.php');

$objProperty = new Model_Property($objConnection);
$objPropertyGroup = new Model_PropertyGroup($objConnection);
?>
<?php

print_r($_FILES["f"]);

if($_FILES["f"] && strtolower(end(explode('.', $_FILES['f']['name']))) == 'csv')
{
    $filePath = $_FILES['f']['tmp_name'];  
    
    if(($handle = fopen($filePath, 'r')) !== FALSE) {
        // necessary if a large csv file
        set_time_limit(0);
        $c_userInfo = $_SESSION[global_common::SES_C_USERINFO];
        $createdBy = $c_userInfo[global_mapping::UserID];
        $row = 0;
         $stack = array();
        //ignore header
        $line_of_text = fgetcsv($handle);
        while (!feof($handle) ) {
        	$line_of_text = fgetcsv($handle);
        	if($line_of_text)
        		array_push($stack,$line_of_text);
        }
        fclose($handle);
        
        $count = count($stack);
        for($i=0; $i < $count; $i++)
        {
            
            $where = global_mapping::ArticleTypeID.'='.$stack[$i][4] . ' and '. global_mapping::PropertyGroupName.'=\''.trim($stack[$i][1]).'\'';
            $existedGroups = $objPropertyGroup->getAllPropertyGroup(0,'*',$where,'');
            if(count($existedGroups) <=0)
            {
                $groupID = $objPropertyGroup->insert($stack[$i][1],$stack[$i][1],$stack[$i][4],$i+10,$createdBy);
            }
            else
            {
                $groupID = $existedGroups[0][0];
            }
            
            $where = global_mapping::PropertyGroupID.'='.$groupID . ' and '. global_mapping::PropertyName.'=\''.trim($stack[$i][0]).'\'';
            $existedProperties = $objProperty->getAllProperty(0,'*',$where,'');
            if(count($existedProperties)<=0)
            {
                $objProperty->insert($groupID,$stack[$i][0],$stack[$i][2],1,$stack[$i][3],$createdBy,1);
                echo 'Inserted a new property '.$stack[$i][0].' Group:'.$stack[$i][1]. 'Cat: '.$stack[$i][4];
                echo "<br>";
            }
            else
            {
              echo 'Existed property '.$stack[$i][0].' Group:'.$stack[$i][1]. 'Cat: '.$stack[$i][4];  
              echo "<br>";
            }
        	
        	
        	//$stack[$i][4] = 1;
        }
        
        
        /*$fp = fopen($filePath, 'w');
        fputcsv($fp, array('ID','Name','Address','Email','Sent'));
        foreach ($stack as $item) {
        	fputcsv($fp, $item);
        }
        
        fclose($fp);
        */
        /*
        while(($data = fgetcsv($handle, 1000, ',')) !== FALSE) {
            // number of fields in the csv
            $col_count = count($data);
    
            // get the values from the csv
            $csv[$row]['col1'] = $data[0];
            $csv[$row]['col2'] = $data[1];
    
            // inc the row
            $row++;
        }
        fclose($handle);
        */
    }
   
   
}
?>
<form method="post" enctype="multipart/form-data">
<label>Upload Property file: </label>
<input type="file"  name="f" />
<input type="submit" value="Process" />
</form>

