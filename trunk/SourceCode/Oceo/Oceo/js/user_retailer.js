/*
 * This file was automatically generated By Code Smith 
 * Modifications will be overwritten when code smith is run
 *
 * PLEASE DO NOT MAKE MODIFICATIONS TO THIS FILE
 * Date Created 5/6/2012
 *
 */



/// <summary>
/// Implementations of slretailers represent a Retailer
///
/// </summary>
var retailer =
{
    //region PRESERVE ExtraMethods For Retailer
    //endregion
    //region Contants	
    ACT_ADD_PRICE: 110,
    ACT_UPDATE_PRICE: 111,
    ACT_DELETE_PRICE: 112,
    ACT_CHANGE_PAGE: 113,
    ACT_SHOW_EDIT_PRICE: 114,
    ACT_GET_PRICE: 115,
    ACT_ACTIVE_RETAILER: 116,
    Page: "bg_product.php",
    AdminPage: "../bg_product.php",



    getRetailerInfo: function() {
        core.util.disableControl("btnOK", true);
        var isValid = true;

        controlID = 'cmProductStatus';
        var productStatus = core.util.getObjectValueByID(controlID);
        core.util.validateInputTextBox(controlID, '');
        if (core.util.isNull(productStatus)) {
            core.util.validateInputTextBox(controlID, 'Bạn chưa chọn tình trạng sản phẩm', isValid);
            isValid = false;
        }

        controlID = 'cmCity';
        var city = core.util.getObjectValueByID(controlID);
        core.util.validateInputTextBox(controlID, '');
        if (core.util.isNull(city)) {
            core.util.validateInputTextBox(controlID, 'Bạn chưa chọn khu vực', isValid);
            isValid = false;
        }

        controlID = 'txtPrice';
        var productPrice = $("#" + controlID).cleanVal();
        core.util.validateInputTextBox(controlID, '');
        if (core.util.isNull(productPrice)) {
            core.util.validateInputTextBox(controlID, 'Giá bán không được rỗng', isValid);
            isValid = false;
        }

        controlID = 'txtShipDesc';
        var shippingDesc = core.util.getObjectValueByID(controlID);
        core.util.validateInputTextBox(controlID, '');
        if (core.util.isNull(shippingDesc)) {
            core.util.validateInputTextBox(controlID, 'Giá bán không được rỗng', isValid);
            isValid = false;
        }


        controlID = 'txtContent';
        var content = CKEDITOR.instances[controlID].getData()
        core.util.validateInputTextBox(controlID, '');
        if (core.util.isNull(content)) {
            core.util.validateInputTextBox(controlID, 'Thông tin chi tiết không được rỗng', isValid);
            isValid = false;
        }

        /*if (!core.util.isChecked("chkTerm")) {
            core.util.validateInputTextBox('chkTerm', 'Bạn cần phải đồng ý điều khoản sử dụng', isValid);
            isValid = false;
        }*/

        if (isValid == false) {
            core.util.disableControl("btnOK", false);
            return;
        }
        var retailerInfo =
		{
		    RetailerID: core.util.getObjectValueByID('RetailerID'),
		    ProductID: core.util.getObjectValueByID('ProductID'),
		    ProductStatusID: productStatus,
		    StatusDetail: $("#txtStatusDetail").val(),
		    CityID: city,
		    Price: productPrice,
		    BoxInfo: $("#txtBoxInfo").val(),
		    ShippingDesc: shippingDesc,
		    ImageLink: core.util.getObjectValueByID('txtImage'),
		    ShortDesc: $("#txtShortDesc").val(),
		    ReceiveEmail: core.util.isChecked("chkRecieveEmail"),
		    Description: content,
		    Mode: core.util.getObjectValueByID('adddocmode')
		};


        return retailerInfo;
    },

    postPrice: function() {
        var retailerInfo = this.getRetailerInfo();

        if (core.util.isNull(retailerInfo)) {
            return false;
        }
        if (retailerInfo.Mode == '1' || retailerInfo.Mode == 1) {
            retailerInfo.act = this.ACT_UPDATE_PRICE;
        }
        else {
            retailerInfo.act = this.ACT_ADD_PRICE;
        }

        core.request.post(this.Page, retailerInfo,
            function(respone, info) {
                //console.log(info);
                var strRespond = core.util.parserXML(respone);
                if (parseInt(strRespond[1]['rs']) == 1) {
                    core.ui.showInfoBar(1, strRespond[1]["inf"]);
                    //core.util.goTo("PostSucess.php");
                    //article.clearForm();
                    core.util.disableControl("btnOK", false);
                    //if(articleInfo.Mode=='1' || articleInfo.Mode==1)
                    //{
                    //	core.util.redirect('profile_article.php')
                    //}
                }
                else {
                    core.ui.showInfoBar(2, strRespond[1]["inf"]);
                    core.util.disableControl("btnOK", false);
                }
            },
            function() {
                core.ui.showInfoBar(2, core.constant.MsgProcessError);
                core.util.disableControl("btnOK", false);
            }
        );
    },

    clearForm: function() {
        controlID = 'cmArea';
        core.util.deSelectOption(controlID);


        controlID = 'cmCategory';
        core.util.deSelectOption(controlID);

        controlID = 'cmManufactory';
        core.util.deSelectOption(controlID);

        controlID = 'txtName';
        core.util.clearValue(controlID);

        controlID = 'txtImage';
        core.util.clearValue(controlID);

        controlID = 'optGroup';
        core.util.deSelectOption(controlID);
        controlID = 'optProperty';
        core.util.deSelectOption(controlID);


        controlID = 'txtPropertyValue';
        core.util.clearValue(controlID);

        $('.property-group').remove();

        controlID = 'txtContent';
        var content = CKEDITOR.instances[controlID].setData('');


    },
    activateRetailer: function(retailerID, statusID, page) {

        var data =
		{
		    id: retailerID,
		    statusid: statusID
		};
        if(typeof(page) == 'undefined')
        {
            page = this.Page;
        }
        data.act = this.ACT_ACTIVE_RETAILER;
        core.request.post(page, data,
                function(respone, info) {
                    var strRespond = core.util.parserXML(respone);
                    if (parseInt(strRespond[1]['rs']) == 1) {
                        core.ui.showInfoBar(1, strRespond[1]["inf"]);
                        setTimeout(function() { core.util.reload(); }, 1500)
                    }
                    else {
                        core.ui.showInfoBar(2, strRespond[1]["inf"]);
                    }
                },
                function() {
                    core.ui.showInfoBar(2, core.constant.MsgProcessError);
                }
            );
    },
    deleteRetailer: function(name, retailerID) {
        //curRow = currentRowId;
        me = this;
        core.util.confirmDialog('Bạn đang xóa đăng bán sản phẩm ' + name + '? Không thể phục hồi sau khi xóa.',
            function() {
                var data =
		        {
		            rid: retailerID,
		            status: 1
		        };

		        data.act = me.ACT_DELETE_PRICE;
                core.request.post(me.Page, data,
                        function(respone, info) {
                            var strRespond = core.util.parserXML(respone);
                            if (parseInt(strRespond[1]['rs']) == 1) {
                                core.ui.showInfoBar(1, strRespond[1]["inf"]);
                                setTimeout(function() { core.util.reload(); }, 1500)
                            }
                            else {
                                core.ui.showInfoBar(2, strRespond[1]["inf"]);
                            }
                        },
                        function() {
                            core.ui.showInfoBar(2, core.constant.MsgProcessError);
                        }
                    );
            }
        );

    }

    //endregion   
}
